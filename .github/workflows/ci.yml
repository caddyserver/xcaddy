# Used as inspiration: https://github.com/mvdan/github-actions-golang

name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    strategy:
      # Default is true, cancels jobs for other platforms in the matrix if one fails
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        go: [ '1.21', '1.22' ]

        # Set some variables per OS, usable via ${{ matrix.VAR }}
        # XCADDY_BIN_PATH: the path to the compiled xcaddy binary, for artifact publishing
        # SUCCESS: the typical value for $? per OS (Windows/pwsh returns 'True')
        include:
        - os: ubuntu-latest
          XCADDY_BIN_PATH: ./cmd/xcaddy/xcaddy
          SUCCESS: 0

        - os: macos-latest
          XCADDY_BIN_PATH: ./cmd/xcaddy/xcaddy
          SUCCESS: 0

        - os: windows-latest
          XCADDY_BIN_PATH: ./cmd/xcaddy/xcaddy.exe
          SUCCESS: 'True'

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Print Go version and environment
      id: vars
      shell: bash
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        # Calculate the short SHA1 hash of the git commit
        echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Cache the build cache
      uses: actions/cache@v4
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          ~\AppData\Local\go-build
        key: ${{ runner.os }}-${{ matrix.go }}-go-ci-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.go }}-go-ci

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build xcaddy
      working-directory: ./cmd/xcaddy
      env:
        CGO_ENABLED: 0
      run: |
        go build -trimpath -ldflags="-w -s" -v

    - name: Output version
      run: |
        ${{ matrix.XCADDY_BIN_PATH }} version

    - name: Publish Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: xcaddy_${{ runner.os }}_go${{ matrix.go }}_${{ steps.vars.outputs.short_sha }}
        path: ${{ matrix.XCADDY_BIN_PATH }}
        compression-level: 0

    - name: Run tests
      run: |
        go test -v -coverprofile="cover-profile.out" -short -race ./...

  goreleaser-check:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Print Go version and environment
        id: vars
        shell: bash
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          # Calculate the short SHA1 hash of the git commit
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: check
        env:
          TAG: ${{ steps.vars.outputs.short_sha }}
